% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ml.R
\name{mlf}
\alias{mlf}
\title{Title}
\usage{
mlf(
  x_train,
  y_train,
  x_test,
  lags = 1,
  h = 5,
  fit_func = after::fit_lm,
  predict_func = after::predict_lm,
  level = c(80, 95),
  ci = c("E", "A", "T", "garch", "gaussian"),
  seed = 123,
  encoding = c("target", "model_matrix"),
  ...
)
}
\arguments{
\item{ci}{}
}
\value{

}
\description{
Title
}
\examples{

x_train <- data.frame(matrix(rnorm(20), ncol=2))
x_train$v <- as.factor(sample(c("a", "b", "c"), size=10, replace=TRUE))
x_test <- data.frame(matrix(rnorm(20), ncol=2))
x_test$v <- as.factor(sample(c("a", "b", "c"), size=10, replace=TRUE))
y_train <- rnorm(10)
#mlf(x_train, y_train, x_test)


(obj1 <- after::mlf(x_train = x_train, y_train = y_train,
x_test = x_test, lags = 2, fit_func = randomForest::randomForest,
predict_func = predict, ntree=2, mtry=2, h=5))

(obj2 <- after::mlf(x_train = x_train, y_train = y_train, x_test = x_test,
fit_func = glm.fit, predict_func = predict.glm, lags = 1, h=5))

(obj3 <- after::mlf(x_train = x_train, y_train = y_train, x_test = x_test,
fit_func = glmnet::glmnet, predict_func = glmnet::predict.glmnet, lags = 2,
h=5, alpha=0.5, lambda=0.1))

}
